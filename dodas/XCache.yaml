tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/custom_types.yaml


description: TOSCA template for a complete XRootD cache system: XCache. It includes Redirector, reverse proxy and caches. It relies on K8s and 

topology_template:

  inputs:

    number_of_masters:
      type: integer
      default: 1

    num_cpus_master: 
      type: integer
      default: 8

    mem_size_master:
      type: string
      default: 16 GIB

    number_of_slaves:
      type: integer
      default: 2

    num_cpus_slave: 
      type: integer
      default: 32

    mem_size_slave:
      type: string
      default: 64 GIB

    server_image:
      type: string
      default: "gce://europe-west1-b/dodas-xenial"

  node_templates:

    kubernetes_frontend:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Kubernetes
      properties:
        admin_token: testme
      requirements:
        - host: kubernetes-frontend-server

    kubernetes_workernode:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes 
      properties:
        front_end_ip: { get_attribute: [ kubernetes-frontend-server, public_address, 0 ] }
      requirements:
        - host: kubernetes-workernode-server

    kubernetes-frontend-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              kube_port:
                protocol: tcp
                source: 30443
              xrd_port:
                protocol: tcp
                source: 31094
        scalable:
          properties:
            count: { get_input: number_of_masters }
        host:
          properties:
            instance_type: custom
            num_cpus: { get_input: num_cpus_master }
            mem_size: { get_input: mem_size_master } 
        os:
          properties:
            image: { get_input: server_image }

    kubernetes-workernode-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
        scalable:
          properties:
            count: { get_input: number_of_slaves }
        host:
          properties:
            instance_type: custom
            num_cpus: { get_input: num_cpus_slave }
            mem_size: { get_input: mem_size_slave } 
        os:
          properties:
            image: { get_input: server_image }
      requirements:
       # contextually this can only be a relationship type
          - local_storage:
              # capability is provided by Compute Node Type
              node: xrootd_block_storage
              capability: tosca.capabilities.Attachment
              relationship:
                type: tosca.relationships.AttachesTo
                properties:
                  location: /data/xrd
                  device: hdb

    xrootd_block_storage:
      type: tosca.nodes.indigo.BlockStorage
      properties:
        size: 500 GIB  #Google specific
        type: pd-ssd  #Google specific

 #alternatvely IaaS independent. 
        #   xrootd_block_storage:   
        #      type: tosca.nodes.BlockStorage
        #      properties:
        #        size: 500 GIB

  outputs:
    kubernetes_endpoint:
      value: { concat: [ 'https://', get_attribute: [ kubernetes-frontend-server, public_address, 0 ], ':30443' ] }
 
 # TODO: Add here xcache redirector:port to add e.g. in the dodas compute condfiguration. The TFC setup of CMS. 
 # 
